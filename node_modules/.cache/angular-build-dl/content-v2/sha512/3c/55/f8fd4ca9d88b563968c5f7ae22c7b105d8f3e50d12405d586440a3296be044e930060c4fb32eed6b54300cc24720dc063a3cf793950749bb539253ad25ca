{"version":3,"sources":["webpack:///src/app/explore-container/explore-container.component.ts","webpack:///src/app/explore-container/explore-container.component.html","webpack:///src/app/explore-container/explore-container.module.ts","webpack:///src/app/photo-tab/photo-tab.module.ts","webpack:///src/app/photo-tab/photo-tab.page.html","webpack:///src/app/photo-tab/photo-tab.page.ts","webpack:///src/app/services/photo.service.ts"],"names":["ExploreContainerComponent","selector","templateUrl","styleUrls","ExploreContainerComponentModule","imports","declarations","exports","Tab2PageModule","forChild","path","component","Tab2Page","photoService","actionSheetController","screenshotService","displayCamera","photo","position","create","header","buttons","text","role","icon","handler","deletePicture","actionSheet","present","onSuccess","res","console","log","success","screenshot","filePath","onError","err","error","save","then","Camera","Filesystem","Storage","PhotoService","platform","photos","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","get","key","PHOTO_STORAGE","photoList","JSON","parse","value","is","readFile","filepath","directory","Data","webviewPath","data","frame","window","frames","scene","document","querySelector","components","getCanvas","capturedPhoto","savePicture","savedImageFile","unshift","set","stringify","cameraPhoto","readAsBase64","base64Data","fileName","Date","getTime","writeFile","savedFile","uri","convertFileSrc","webPath","file","fetch","response","splice","filename","substr","lastIndexOf","deleteFile","providedIn"],"mappings":"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","file":"photo-tab-photo-tab-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-explore-container',\n  templateUrl: './explore-container.component.html',\n  styleUrls: ['./explore-container.component.scss'],\n})\nexport class ExploreContainerComponent implements OnInit {\n  @Input() name: string;\n  \n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","<div id=\"container\">\n  <strong>{{ name }}</strong>\n  <p>Explore <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ionicframework.com/docs/components\">UI Components</a></p>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExploreContainerComponent } from './explore-container.component';\n\n@NgModule({\n  imports: [ CommonModule, FormsModule,IonicModule,],\n  declarations: [ExploreContainerComponent],\n  exports: [ExploreContainerComponent]\n})\nexport class ExploreContainerComponentModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './photo-tab.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","<ion-content>\r\n  <ion-content *ngIf=\"displayCamera\" [fullscreen]=\"true\">\r\n    <iframe name=\"arcomponent\" src=\"../assets/augmented-reality/scene.html\" style=\"position:absolute; width: 100%; height: 100%;\"></iframe>\r\n    <ion-fab vertical=\"bottom\" horizontal=\"center\" slot=\"fixed\">\r\n      <ion-fab-button (click)=\"takeScreenshot()\">\r\n        <ion-icon name=\"camera\"></ion-icon>\r\n      </ion-fab-button>\r\n    </ion-fab>\r\n  </ion-content>\r\n\t<div id=\"screenshotContainer\" [class.hidden]=\"!displayCamera\">\r\n\t\t<ion-img [src]=\"screenshot\"></ion-img>\r\n\t</div>\r\n\r\n  <ion-grid>\r\n    <ion-row>\r\n    <ion-col size=\"6\" *ngFor=\"let photo of photoService.photos; index as position\">\r\n      <ion-img [src]=\"photo.webviewPath\" (click)=\"showActionSheet(photo, position)\"></ion-img>\r\n    </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-content>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActionSheetController } from '@ionic/angular';\r\nimport { Photo, PhotoService } from '../services/photo.service';\r\nimport { Screenshot } from '@ionic-native/screenshot/ngx';\r\n\r\n@Component({\r\n  selector: 'app-photo-tab',\r\n  templateUrl: 'photo-tab.page.html',\r\n  styleUrls: ['photo-tab.page.scss']\r\n})\r\nexport class Tab2Page implements OnInit {\r\n\r\n\tdisplayCamera: boolean\r\n\tscreenshot: any\r\n\r\n  constructor(public photoService: PhotoService,\r\n\t\t\t  public actionSheetController: ActionSheetController,\r\n\t\t\t  private screenshotService: Screenshot\r\n  )\r\n  {}\r\n\r\n  async ngOnInit() {\r\n\t\tthis.displayCamera = true\r\n    // await this.photoService.addNewToGallery();\r\n  }\r\n\r\n  public async showActionSheet(photo: Photo, position: number) {\r\n    const actionSheet = await this.actionSheetController.create({\r\n      header: 'Photos',\r\n      buttons: [{\r\n        text: 'Delete',\r\n        role: 'destructive',\r\n        icon: 'trash',\r\n        handler: () => {\r\n          this.photoService.deletePicture(photo, position);\r\n        }\r\n      }, {\r\n        text: 'Cancel',\r\n        icon: 'close',\r\n        role: 'cancel',\r\n        handler: () => {\r\n          // Nothing to do, action sheet is automatically closed\r\n         }\r\n      }]\r\n    });\r\n    await actionSheet.present();\r\n  }\r\n\r\n\tpublic async takeScreenshot() {\r\n\r\n\t\t/* Screenshot tha aframe way\r\n\t\tconst frame = window.frames[0] // arcomponent\r\n\t\tconst scene = frame.document.querySelector('a-scene');\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst screenshot = scene.components.screenshot.getCanvas('perspective');\r\n\t\t */\r\n\r\n\t\tconst onSuccess = res => {\r\n\t\t\tconsole.log('success 2', res)\r\n\t\t\t\r\n\t\t\tif (!res || !res.success) return\r\n\t\t\t\r\n\t\t\tthis.screenshot = res.filePath\r\n\t\t\tconsole.log('screenshot', this.screenshot)\r\n\r\n\t\t\tthis.displayCamera = false\r\n\t\t}\r\n\t\tconst onError = err => {\r\n\t\t\tconsole.error('error', err)\r\n\t\t}\r\n\r\n\t\t// Take a screenshot and save to file\r\n\t\tthis.screenshotService.save('jpg', 100, 'screenshot').then(onSuccess, onError);\r\n\t\t// Take a screenshot and get temporary file URI\r\n\t\t// this.screenshot.URI(80).then(onSuccess, onError);\r\n\r\n\t\t// const screenshot = this.screensho\r\n\r\n\t\t// document.getElementById('screenshotContainer').appendChild(screenshot)\r\n\r\n\t\t// this.screenshot = screenshot\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, CameraPhoto, CameraSource } from '@capacitor/core';\r\nimport { Platform } from '@ionic/angular';\r\n\r\nconst { Camera, Filesystem, Storage } = Plugins;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhotoService {\r\n  public photos: Photo[] = [];\r\n  private PHOTO_STORAGE: 'photos';\r\n  private platform: Platform;\r\n\r\n  constructor(platform: Platform) {\r\n    this.platform = platform;\r\n   }\r\n\r\n  public async loadSaved() {\r\n    // Retrieve cached photo array data\r\n    const photoList = await Storage.get({ key: this.PHOTO_STORAGE });\r\n    this.photos = JSON.parse(photoList.value) || [];\r\n\r\n    // If running on the web...\r\n    if (!this.platform.is('hybrid')) {\r\n      // Display the photo by reading into base64 format\r\n      for (const photo of this.photos) {\r\n        // Read each saved photo's data from the Filesystem\r\n        const readFile = await Filesystem.readFile({\r\n            path: photo.filepath,\r\n            directory: FilesystemDirectory.Data\r\n        });\r\n        // Web platform only: Load the photo as base64 data\r\n        photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\r\n      }\r\n    }\r\n  }\r\n\r\n/* Use the device camera to take a photo:\r\n// https://capacitor.ionicframework.com/docs/apis/camera\r\n\r\n// Store the photo data into permanent file storage:\r\n// https://capacitor.ionicframework.com/docs/apis/filesystem\r\n\r\n// Store a reference to all photo filepaths using Storage API:\r\n// https://capacitor.ionicframework.com/docs/apis/storage\r\n*/\r\n  public async addNewToGallery() {\r\n\r\n  \tconst frame = window.frames[0] // arcomponent\r\n  \tconst scene = frame.document.querySelector('a-scene');\r\n\r\n  \t// @ts-ignore\r\n\t  const screenshot = scene.components.screenshot.getCanvas('perspective');\r\n\r\n  \tconsole.log('add new to gallery', screenshot)\r\n\r\n\r\n  \treturn\r\n\r\n    // Display photo\r\n    const capturedPhoto = await Camera.getPhoto({\r\n      resultType: CameraResultType.Uri, // file-based data; provides best performance\r\n      source: CameraSource.Camera, // automatically take a new photo with the camera\r\n      quality: 100 // highest quality (0 to 100)\r\n    });\r\n\r\n    const savedImageFile = await this.savePicture(capturedPhoto);\r\n\r\n    // Add new photo to Photos array\r\n    this.photos.unshift(savedImageFile);\r\n\r\n    // Cache all photo data for future retrieval\r\n    Storage.set({\r\n      key: this.PHOTO_STORAGE,\r\n      value: JSON.stringify(this.photos)\r\n    });\r\n  }\r\n\r\n  // Save picture to file on device\r\n  private async savePicture(cameraPhoto: CameraPhoto) {\r\n    // Convert photo to base64 format, required by Filesystem API to save\r\n    const base64Data = await this.readAsBase64(cameraPhoto);\r\n\r\n    // Write the file to the data directory\r\n    const fileName = new Date().getTime() + '.jpeg';\r\n    const savedFile = await Filesystem.writeFile({\r\n      path: fileName,\r\n      data: base64Data,\r\n      directory: FilesystemDirectory.Data\r\n    });\r\n\r\n    if (this.platform.is('hybrid')) {\r\n      // Display the new image by rewriting the 'file://' path to HTTP\r\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\r\n      return {\r\n        filepath: savedFile.uri,\r\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\r\n      };\r\n    }\r\n    else {\r\n      // Use webPath to display the new image instead of base64 since it's\r\n      // already loaded into memory\r\n      return {\r\n        filepath: fileName,\r\n        webviewPath: cameraPhoto.webPath\r\n      };\r\n    }\r\n  }\r\n\r\n  // Read camera photo into base64 format based on the platform the app is running on\r\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\r\n    // \"hybrid\" will detect Cordova or Capacitor\r\n    if (this.platform.is('hybrid')) {\r\n      // Read the file into base64 format\r\n      const file = await Filesystem.readFile({\r\n        path: cameraPhoto.path\r\n      });\r\n\r\n      return file.data;\r\n    }\r\n    else {\r\n      // Fetch the photo, read as a blob, then convert to base64 format\r\n      const response = await fetch(cameraPhoto.webPath);\r\n      const blob = await response.blob();\r\n\r\n      return await this.convertBlobToBase64(blob) as string;\r\n    }\r\n  }\r\n\r\n  // Delete picture by removing it from reference data and the filesystem\r\n  public async deletePicture(photo: Photo, position: number) {\r\n    // Remove this photo from the Photos reference data array\r\n    this.photos.splice(position, 1);\r\n\r\n    // Update photos array cache by overwriting the existing photo array\r\n    Storage.set({\r\n      key: this.PHOTO_STORAGE,\r\n      value: JSON.stringify(this.photos)\r\n    });\r\n\r\n    // delete photo file from filesystem\r\n    const filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1);\r\n    await Filesystem.deleteFile({\r\n      path: filename,\r\n      directory: FilesystemDirectory.Data\r\n    });\r\n  }\r\n\r\n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onerror = reject;\r\n    reader.onload = () => {\r\n        resolve(reader.result);\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  });\r\n}\r\n\r\nexport interface Photo {\r\n  filepath: string;\r\n  webviewPath: string;\r\n}\r\n"]}